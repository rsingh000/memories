[{"/Users/mac2018/Desktop/react/projects/memories_project/client/src/index.js":"1","/Users/mac2018/Desktop/react/projects/memories_project/client/src/App.js":"2","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/Form.js":"3","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Posts.js":"4","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Post/Post.js":"5","/Users/mac2018/Desktop/react/projects/memories_project/client/src/styles.js":"6","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/styles.js":"7","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Post/styles.js":"8","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/styles.js":"9","/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/index.js":"10","/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/posts.js":"11","/Users/mac2018/Desktop/react/projects/memories_project/client/src/actions/posts.js":"12","/Users/mac2018/Desktop/react/projects/memories_project/client/src/api/index.js":"13","/Users/mac2018/Desktop/react/projects/memories_project/client/src/constants/actionTypes.js":"14","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Navbar/Navbar.js":"15","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Navbar/styles.js":"16","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Home/Home.js":"17","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Auth.js":"18","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/styles.js":"19","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Input.js":"20","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Icon.js":"21","/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/auth.js":"22","/Users/mac2018/Desktop/react/projects/memories_project/client/src/actions/auth.js":"23","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Pagination.jsx":"24","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/styles.js":"25","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Home/styles.js":"26","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/PostDetails.jsx":"27","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/styles.js":"28","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/CommentSection.jsx":"29"},{"size":464,"mtime":1656701243077,"results":"30","hashOfConfig":"31"},{"size":1258,"mtime":1661306788177,"results":"32","hashOfConfig":"31"},{"size":3187,"mtime":1661558184732,"results":"33","hashOfConfig":"31"},{"size":756,"mtime":1661396494972,"results":"34","hashOfConfig":"31"},{"size":3661,"mtime":1661629518500,"results":"35","hashOfConfig":"31"},{"size":535,"mtime":1657038745219,"results":"36","hashOfConfig":"31"},{"size":425,"mtime":1656618346808,"results":"37","hashOfConfig":"31"},{"size":1069,"mtime":1661629523322,"results":"38","hashOfConfig":"31"},{"size":265,"mtime":1656618364387,"results":"39","hashOfConfig":"31"},{"size":153,"mtime":1659852246938,"results":"40","hashOfConfig":"31"},{"size":1600,"mtime":1661589978507,"results":"41","hashOfConfig":"31"},{"size":2519,"mtime":1661589728969,"results":"42","hashOfConfig":"31"},{"size":1108,"mtime":1661733129322,"results":"43","hashOfConfig":"31"},{"size":434,"mtime":1661589750251,"results":"44","hashOfConfig":"31"},{"size":2160,"mtime":1661621959578,"results":"45","hashOfConfig":"31"},{"size":1352,"mtime":1661622197925,"results":"46","hashOfConfig":"31"},{"size":3255,"mtime":1661478207335,"results":"47","hashOfConfig":"31"},{"size":4002,"mtime":1661299683268,"results":"48","hashOfConfig":"31"},{"size":637,"mtime":1657134824631,"results":"49","hashOfConfig":"31"},{"size":1059,"mtime":1657306126253,"results":"50","hashOfConfig":"31"},{"size":501,"mtime":1657307176891,"results":"51","hashOfConfig":"31"},{"size":486,"mtime":1659941261319,"results":"52","hashOfConfig":"31"},{"size":989,"mtime":1661300303995,"results":"53","hashOfConfig":"31"},{"size":967,"mtime":1661478335933,"results":"54","hashOfConfig":"31"},{"size":151,"mtime":1661478387123,"results":"55","hashOfConfig":"31"},{"size":462,"mtime":1661478423552,"results":"56","hashOfConfig":"31"},{"size":3385,"mtime":1661592260215,"results":"57","hashOfConfig":"31"},{"size":1076,"mtime":1661559412558,"results":"58","hashOfConfig":"31"},{"size":2403,"mtime":1661591262893,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1tbsh6b",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac2018/Desktop/react/projects/memories_project/client/src/index.js",[],[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/App.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/Form.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Posts.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Post/Post.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/Post/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Posts/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/index.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/posts.js",["153"],[],"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport default (state= { isLoading: true, posts: []}, action) => {\n    switch(action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true};\n        case END_LOADING:\n            return { ...state, isLoading: false};\n        case LIKE: \n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))}\n        case COMMENT: \n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    if(post._id === action.payload._id) {\n                        return action.payload;\n                    }\n                    return post;\n                })\n            }\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)};\n        case FETCH_ALL:\n            return { ...state, posts: action.payload.data, currentPage: action.payload.currentPage, numberOfPages: action.payload.numberOfPages };\n        case FETCH_BY_SEARCH: \n            return { ...state, posts: action.payload};\n        case FETCH_POST: \n            return { ...state, post: action.payload};\n        case CREATE:\n            return {...state, posts: [ ...state.posts, action.payload]};\n        case UPDATE: \n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)};\n        default:\n            return state;\n    }\n}","/Users/mac2018/Desktop/react/projects/memories_project/client/src/actions/posts.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/api/index.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/constants/actionTypes.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Navbar/Navbar.js",["154"],[],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { AppBar, Avatar, Typography, Toolbar, Button } from '@material-ui/core';\nimport useStyles from './styles';\nimport memoriesLogo from '../../images/memoriesLogo.png';\nimport memoriesText from '../../images/memoriesText.png';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport * as actionType from '../../constants/actionTypes';\nconst Navbar = () => {\n\n  const classes = useStyles();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation(); \n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/');\n\n    setUser(null);\n  }\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if(token) {\n      const decodedToken = decode(token);\n\n      if(decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n\n  },[location]); \n  \n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Link to=\"/\" className={classes.brandContainer}>\n          <img component={Link} to=\"/\" src={memoriesText} alt=\"icon\" height=\"45px\" />\n          <img className={classes.image} src={memoriesLogo} alt=\"icon\" height=\"40px\" />\n        </Link>\n        <Toolbar className={classes.toolbar} >\n            {user?.result ? (\n                <div className={classes.profile}>\n                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imgUrl}>{user.result.name.charAt(0)}</Avatar>\n                    <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\n                    <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n                </div>\n            ): (\n                <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n            )} \n        </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Navbar/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Home/Home.js",["155","156"],[],"import React, { useState, useEffect } from 'react';\nimport { Container, Grow, Grid, Paper, AppBar, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport { getPosts, getPostsBySearch } from '../../actions/posts';\nimport Pagination from '../Pagination';\nimport useStyles from './styles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n\n    const [currentId, setCurrentId] = useState(null);\n    const dispatch = useDispatch();\n    const query = useQuery();\n    const history = useHistory();\n    const page = query.get('page') || 1;\n    const searchQuery = query.get('searchQuery');\n    const classes = useStyles();\n    const [search, setSearch] = useState('');\n    const [tags, setTags] = useState([]);\n\n    const searchPost = () => {\n        if(search.trim() || tags) {\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`)\n        } else {\n            history.push('/');\n        }\n    }\n\n    const handleKeyPress = (e) => {\n        if(e.keyCode === 13) {\n            searchPost();\n        }\n    }\n\n    const handleAdd = (tag) => {\n        setTags([...tags, tag]);\n    }\n\n    const handleDelete = (tagToDelete) => {\n        setTags(tags.filter((tag) => tag !== tagToDelete));\n    }\n\n  return (\n    <Grow in>\n        <Container maxWidth=\"xl\">\n            <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" className={classes.gridContainer} spacing={3}>\n                <Grid item xs={12} sm={6} md={9}>\n                    <Posts setCurrentId={setCurrentId}/>\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\" >\n                        <TextField name=\"search\" variant=\"outlined\" label=\"Search Memories\" fullWidth value={search}\n                            onKeyPress={handleKeyPress}\n                            onChange={(e) => {setSearch(e.target.value)}}\n                        />\n                        <ChipInput\n                            style={{ margin: '10px 0'}}\n                            value={tags}\n                            onAdd={handleAdd}\n                            onDelete={handleDelete}\n                            label=\"Search Tags\"\n                            variant=\"outlined\"\n                        />\n                        <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\n                    </AppBar>\n                    <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                    { (!searchQuery && !tags.length) && (\n                        <Paper className={classes.pagination} elevation={6}>\n                            <Pagination page={page}/>\n                        </Paper>\n                    )}\n                </Grid>\n            </Grid>\n        </Container>\n    </Grow>\n  )\n}\n\nexport default Home","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Auth.js",["157","158","159"],[],"import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useDispatch } from 'react-redux';\nimport Input from './Input';\nimport useStyles from './styles';\nimport { GoogleOAuthProvider, GoogleLogin, googleLogout } from '@react-oauth/google';\nimport Icon from './Icon';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from '../../actions/auth';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst Auth = () => {\n\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignup, setIsSignup] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if(isSignup) {\n        dispatch(signup(formData, history))\n      } else {\n        dispatch(signin(formData, history))\n        \n      }\n    };\n\n    const handleChange = (e) => {\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n      setIsSignup((prevIsSignup) => !prevIsSignup);\n      setShowPassword(false); \n    }\n\n    const googleSuccess = async (res) => {\n\n      const token = res?.credential;\n      const result = jwt_decode(token);\n\n      try {\n        dispatch({ type: 'AUTH', data: { result, token }});\n\n        history.push('/');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const googleFailure = (error) => {\n      console.log(error);\n      console.log('Google Sign-in was unsuccessful. Please try again!')\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar} >\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\" >{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {\n              isSignup && (\n                <>\n                  <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                  <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange}  half />\n                </>\n              )\n            }\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n            { isSignup && (\n              <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/>\n            )}\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In'}\n          </Button>\n          <GoogleOAuthProvider \n            clientId='157305944726-b3gm011oo4moosok453vku7qepaktual.apps.googleusercontent.com'\n          >\n            <GoogleLogin onSuccess={credentialResponse => {googleSuccess(credentialResponse)}} \n                onError={googleFailure}\n                size=\"large\"\n                width='100%'\n                className={classes.googleButton}\n            />\n          </GoogleOAuthProvider>\n          <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Button onClick={switchMode}>{ isSignup ? \"Already have an account?\" : \"Don't have an account! Sign up\"}</Button>\n              </Grid>\n          </Grid>\n        </form>\n\n      </Paper>\n\n    </Container>\n  )\n}\n\nexport default Auth","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Input.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Auth/Icon.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/reducers/auth.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/actions/auth.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Pagination.jsx",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Home/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/PostDetails.jsx",["160","161"],[],"import React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport CommentSection from './CommentSection';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\n\nconst PostDetails = () => {\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const classes = useStyles();\n    const { id } = useParams();\n\n    useEffect(() => {\n      dispatch(getPost(id))\n    },[id, dispatch]);\n\n    useEffect(() => {\n      if(post) {\n        dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',')}))\n      }\n    },[post,dispatch]);\n\n    if(!post) return null;\n\n    if(isLoading) {\n      return (\n        <Paper elevation={6} className={classes.loadingPaper}>\n          <CircularProgress size=\"7em\" />\n        </Paper>\n      )\n    }\n\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n    const openPost = (_id) => history.push(`/posts/${_id}`);\n    \n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <CommentSection post={post} />\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </div>\n      </div>\n      { recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">You might also like: </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(({ title, message, name, likes, selectedFile, _id}) => (\n              <div style={{ margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                <img src={selectedFile} alt=\"\" width=\"200px\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      ) || ('')}\n    </Paper>\n  )\n}\n\nexport default PostDetails","/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/styles.js",[],[],"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/PostDetails/CommentSection.jsx",[],[],{"ruleId":"162","severity":1,"message":"163","line":3,"column":1,"nodeType":"164","endLine":36,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":37,"column":5,"nodeType":"167","endLine":37,"endColumn":15,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"173","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":18},{"ruleId":"169","severity":1,"message":"174","line":2,"column":62,"nodeType":"171","messageId":"172","endLine":2,"endColumn":71},{"ruleId":"169","severity":1,"message":"175","line":7,"column":44,"nodeType":"171","messageId":"172","endLine":7,"endColumn":56},{"ruleId":"169","severity":1,"message":"176","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":12},{"ruleId":"177","severity":1,"message":"178","line":60,"column":33,"nodeType":"179","messageId":"180","endLine":60,"endColumn":35},{"ruleId":"177","severity":1,"message":"178","line":76,"column":9,"nodeType":"179","messageId":"180","endLine":76,"endColumn":11},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["181"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getPosts' is defined but never used.","'TextField' is defined but never used.","'googleLogout' is defined but never used.","'Icon' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator",{"desc":"182","fix":"183"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"184","text":"185"},[1087,1097],"[location, logout, user?.token]"]