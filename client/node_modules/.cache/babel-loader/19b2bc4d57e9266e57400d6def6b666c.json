{"ast":null,"code":"var _jsxFileName = \"/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux'; // Get the current ID\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      var _user$result;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          mutliple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"Gs+XhP1XVz8adbs/8SlCz87p7XY=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","createPost","updatePost","useSelector","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/mac2018/Desktop/react/projects/memories_project/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\n\n// Get the current ID\n\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n    const [postData, setPostData] = useState({\n        title: '', message: '', tags: '', selectedFile: ''\n    });\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    \n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'));\n    \n    useEffect(() => {\n        if(post) setPostData(post);\n    },[post]);\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n        } else {\n            dispatch(createPost({ ...postData, name: user?.result?.name }));\n        }\n        clear();\n    }\n\n    const clear =() => {\n        setCurrentId(null);\n        setPostData({ title: '', message: '', tags: '', selectedFile: ''});\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{ currentId ? 'Editing' : 'Creating'} a memory</Typography>\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData( { ...postData, title: e.target.value })}/>\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData( { ...postData, message: e.target.value })}/>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData( { ...postData, tags: e.target.value.split(',') })}/>\n                <div className={classes.fileInput}>\n                    <FileBase \n                        type=\"file\"\n                        mutliple={false}\n                        onDone={({base64}) =>Â setPostData({ ...postData, selectedFile: base64})}\n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}